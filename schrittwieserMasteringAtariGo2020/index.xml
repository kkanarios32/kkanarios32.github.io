<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/">
  <fr:frontmatter>
    <fr:authors>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Julian%20Schrittwieser/" type="external">Julian Schrittwieser</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Ioannis%20Antonoglou/" type="external">Ioannis Antonoglou</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Thomas%20Hubert/" type="external">Thomas Hubert</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Karen%20Simonyan/" type="external">Karen Simonyan</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Laurent%20Sifre/" type="external">Laurent Sifre</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Simon%20Schmitt/" type="external">Simon Schmitt</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Arthur%20Guez/" type="external">Arthur Guez</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Edward%20Lockhart/" type="external">Edward Lockhart</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Demis%20Hassabis/" type="external">Demis Hassabis</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Thore%20Graepel/" type="external">Thore Graepel</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/Timothy%20Lillicrap/" type="external">Timothy Lillicrap</fr:link>
      </fr:author>
      <fr:author>
        <fr:link href="https://kkanarios32.github.io/David%20Silver/" type="external">David Silver</fr:link>
      </fr:author>
    </fr:authors>
    <fr:date>
      <fr:year>2020</fr:year>
      <fr:month>12</fr:month>
    </fr:date>
    <fr:uri>https://kkanarios32.github.io/schrittwieserMasteringAtariGo2020/</fr:uri>
    <fr:display-uri>schrittwieserMasteringAtariGo2020</fr:display-uri>
    <fr:route>/schrittwieserMasteringAtariGo2020/</fr:route>
    <fr:title text="Mastering Atari, Go, Chess and Shogi by Planning with a Learned Model">Mastering Atari, Go, Chess and Shogi by Planning with a Learned Model</fr:title>
    <fr:taxon>Reference</fr:taxon>
    <fr:meta name="doi">10.1038/s41586-020-03051-4</fr:meta>
    <fr:meta name="external">https://arxiv.org/abs/1911.08265</fr:meta>
    <fr:meta name="bibtex"><![CDATA[@article{schrittwieserMasteringAtariGo2020,
 title = {Mastering {{Atari}}, {{Go}}, {{Chess}} and {{Shogi}} by {{Planning}} with a {{Learned Model}}},
 author = {Schrittwieser, Julian and Antonoglou, Ioannis and Hubert, Thomas and Simonyan, Karen and Sifre, Laurent and Schmitt, Simon and Guez, Arthur and Lockhart, Edward and Hassabis, Demis and Graepel, Thore and Lillicrap, Timothy and Silver, David},
 year = {2020},
 doi = {10.1038/s41586-020-03051-4},
 urldate = {2025-03-31},
 journal = {Nature},
 volume = {588},
 number = {7839},
 pages = {604--609},
 file = {/home/kellen/Zotero/storage/I7Y4VSFZ/Schrittwieser et al. - 2020 - Mastering Atari, Go, Chess and Shogi by Planning with a Learned Model.pdf},
 keywords = {Computer Science - Machine Learning,Statistics - Machine Learning},
 langid = {english},
 archiveprefix = {arXiv},
 abstract = {Constructing agents with planning capabilities has long been one of the main challenges in the pursuit of artificial intelligence. Tree-based planning methods have enjoyed huge success in challenging domains, such as chess and Go, where a perfect simulator is available. However, in real-world problems the dynamics governing the environment are often complex and unknown. In this work we present the MuZero algorithm which, by combining a tree-based search with a learned model, achieves superhuman performance in a range of challenging and visually complex domains, without any knowledge of their underlying dynamics. MuZero learns a model that, when applied iteratively, predicts the quantities most directly relevant to planning: the reward, the action-selection policy, and the value function. When evaluated on 57 different Atari games - the canonical video game environment for testing AI techniques, in which model-based planning approaches have historically struggled - our new algorithm achieved a new state of the art. When evaluated on Go, chess and shogi, without any knowledge of the game rules, MuZero matched the superhuman performance of the AlphaZero algorithm that was supplied with the game rules.},
 issn = {0028-0836, 1476-4687},
 primaryclass = {cs},
 eprint = {1911.08265},
 month = {December}
}]]></fr:meta>
  </fr:frontmatter>
  <fr:mainmatter />
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors />
            <fr:date>
              <fr:year>2025</fr:year>
              <fr:month>3</fr:month>
              <fr:day>31</fr:day>
            </fr:date>
            <fr:uri>https://kkanarios32.github.io/006R/</fr:uri>
            <fr:display-uri>006R</fr:display-uri>
            <fr:route>/006R/</fr:route>
            <fr:title text="Alpha-Zero">Alpha-Zero</fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>The major break through of planning was in <fr:link href="/schrittwieserMasteringAtariGo2020/" title="Mastering Atari, Go, Chess and Shogi by Planning with a Learned Model" uri="https://kkanarios32.github.io/schrittwieserMasteringAtariGo2020/" display-uri="schrittwieserMasteringAtariGo2020" type="local">alpha-zero</fr:link>, or more accurately at the time was just alpha-go. However, the core idea remained the same. The idea is to learn some notion of a "good" state in a game like chess or go and then leverage this information in combination with some planning.</html:p>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
