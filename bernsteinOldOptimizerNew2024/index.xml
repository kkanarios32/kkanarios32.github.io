<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/">
  <fr:frontmatter>
    <fr:authors>
      <fr:author>Jeremy Bernstein</fr:author>
      <fr:author>Laker Newhouse</fr:author>
    </fr:authors>
    <fr:date>
      <fr:year>2024</fr:year>
      <fr:month>12</fr:month>
    </fr:date>
    <fr:uri>https://kellenkanarios.com/bernsteinOldOptimizerNew2024/</fr:uri>
    <fr:display-uri>bernsteinOldOptimizerNew2024</fr:display-uri>
    <fr:route>/bernsteinOldOptimizerNew2024/</fr:route>
    <fr:title text="Old Optimizer, New Norm: An Anthology">Old Optimizer, New Norm: An Anthology</fr:title>
    <fr:taxon>Reference</fr:taxon>
    <fr:meta name="doi">10.48550/arXiv.2409.20325</fr:meta>
    <fr:meta name="external">https://arxiv.org/abs/2409.20325</fr:meta>
    <fr:meta name="bibtex"><![CDATA[@misc{bernsteinOldOptimizerNew2024,
 title = {Old {{Optimizer}}, {{New Norm}}: {{An Anthology}}},
 author = {Bernstein, Jeremy and Newhouse, Laker},
 year = {2024},
 doi = {10.48550/arXiv.2409.20325},
 urldate = {2025-02-26},
 number = {arXiv:2409.20325},
 publisher = {arXiv},
 file = {/home/kellen/Downloads/pdfs/storage/96NMW68I/Bernstein and Newhouse - 2024 - Old Optimizer, New Norm An Anthology.pdf;/home/kellen/Downloads/pdfs/storage/URA6S2M3/2409.html},
 keywords = {Computer Science - Machine Learning,Mathematics - Optimization and Control},
 archiveprefix = {arXiv},
 abstract = {Deep learning optimizers are often motivated through a mix of convex and approximate second-order theory. We select three such methods -- Adam, Shampoo and Prodigy -- and argue that each method can instead be understood as a squarely first-order method without convexity assumptions. In fact, after switching off exponential moving averages, each method is equivalent to steepest descent under a particular norm. By generalizing this observation, we chart a new design space for training algorithms. Different operator norms should be assigned to different tensors based on the role that the tensor plays within the network. For example, while linear and embedding layers may have the same weight space of \${\textbackslash}mathbb\{R\}{\textasciicircum}\{m{\textbackslash}times n\}\$, these layers play different roles and should be assigned different norms. We hope that this idea of carefully metrizing the neural architecture might lead to more stable, scalable and indeed faster training.},
 primaryclass = {cs},
 eprint = {2409.20325},
 month = {December},
 shorttitle = {Old {{Optimizer}}, {{New Norm}}}
}]]></fr:meta>
  </fr:frontmatter>
  <fr:mainmatter />
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
